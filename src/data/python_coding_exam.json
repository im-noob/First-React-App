{
    "code": 200,
    "message": "Success",
    "quiz": {
        "quiz_id": 8675,
        "parent_type": "quiz",
        "test_id": 34151,
        "course_id": 11553,
        "quiz_name": "Python Coding Exam",
        "test_name": "Python Coding Exam",
        "parent_instruction": "<p><b>General Directions\r</b></p><p>1. This test consists of 7 Subjective question .\r</p><p>2. Write the detailed code including importing of necessary library wherever required\r</p><p>3. Each question in the test carry 5 marks each (Except 3 class questions -10 marks each).\r</p><p>4. Read each question and write the code Carefully.\r</p><p>5. All Questions are mandatory.\r</p><p>6. For any Question , If you feel that you need a data-set , Create a virtual data-set by yourself &amp; do the needful.\r</p><p>7. Be sure to allocate your time carefully (45 mins) so you are able to complete the entire test within the testing session.\r</p><p>8. You may go back and review your answers at any time during the testing session.\r</p><p>9. You may NOT use a calculator or reference materials during the testing session.\r</p><p><br></p><p><br></p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p><p>\r</p>\n",
        "instructions": null,
        "creator_id": "22218544",
        "test_parts": [
            {
                "test_part_id": 44534,
                "test_part_name": "Part A",
                "instructions": "",
                "display_index": null,
                "sound_asset": "",
                "sound_play_times": -1,
                "video_asset": "0",
                "text_image_asset": "",
                "randomize": 1,
                "randomize_options": 0,
                "sound_url": null,
                "questions": [
                    {
                        "question_id": "492972",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Write a method in Python to read lines from a text file Global_India.TXT, to find and display the occurrence of the word &lsquo;&lsquo;India&rsquo;&rsquo;.\\r<\\/p><p>&nbsp;For example : If the content of the file is\\r<\\/p><p>&nbsp;&lsquo;&lsquo;India is the fastest growing economy. India is looking for more investments around the globe. The whole world is looking at India as a great market. Most of the Indians can foresee the heights that India is capable of reaching.&rsquo;&rsquo;\\r<\\/p><p>The output should be 4.<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p>\\n\",\"options\":[[]],\"marks\":5,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 1
                    },
                    {
                        "question_id": "492975",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Create a class named Book where title, publishers, price act as a data member  along with caldiscount function that calculates the given discount on book price. Also create displaydata function that will call caldiscount function and display all the values. Take discount =15  as class variable.\\r<\\/p><p><br><\\/p><p>\\r<\\/p>\\n\",\"options\":[[]],\"marks\":10,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 2
                    },
                    {
                        "question_id": "492970",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Write a program using Python -----<\\/p><p><img src=\\\"https:\\/\\/dme2wmiz2suov.cloudfront.net\\/User(22218544)\\/question\\/image\\/1224612-2021-03-04_33b34af5-d6b7-439f-948f-3b9596521ee8-sq2.png?Expires=1635882756&amp;Signature=rPgNZadPW1zeJuox6UtCD-ecjtqdF~eSL1vMMu-LA6d5B2K6ZvIAT42J84mI1rCtW~CmAN9rqIVGQa3TYljKO7k5ow1gmKFnSxFew9dIrLmmWR0RmREiuWHwdia8rEiUFTHVg6qMmNXCZPbJMbrcDeUFLhzOBf3XDNox3xnCy5GDnDOy-oNNuIWkEBw2J5REq33MXuNAxgbju3A4N7smvYiB-MRURUHka44oI4NOROAWonFgZwqLvpZZbq1fbBZUr5jy3xnGoKzj1g8isQOH5WUElo2nwdIiGKGXn96Uhb5tapN18E40nTTMj3OhZYCeVc9xupWFqxoDOEhj4GPuVQ__&amp;Key-Pair-Id=APKAIIFZDCEANAVU2VTA\\\" style=\\\"width: 439px;\\\"><br class=\\\"Apple-interchange-newline\\\"><\\/p><p><br><\\/p>\\n\",\"options\":[[]],\"marks\":5,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 3
                    },
                    {
                        "question_id": "492971",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Define a class CONTAINER in Python with the following specifications :\\r<\\/p><p>-Instance Attributes \\r<\\/p><p>- Radius, Height # Radius and Height of Container \\r<\\/p><p>-Volume # Volume of Container Methods \\r<\\/p><p>- CalVolume() # Method to calculate volume # \\r<\\/p><p># With the formula as given below\\r<\\/p><p>3.14 * Radius * Height\\r<\\/p><p>- GetValue() # Method to allow user to enter values of # Radius and  Height \\r<\\/p><p>&nbsp;# Also, this method should call # CalVolume()  method to calculate Volume\\r<\\/p><p>&nbsp;- ShowContainer() # To display Radius, Height  and Volume<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p>\\n\",\"options\":[[]],\"marks\":10,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 4
                    },
                    {
                        "question_id": "492974",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Write a python program to filter out all the negative values given in the list , and then find the square root of the remaining positive values.<\\/p>\\n\",\"options\":[[]],\"marks\":5,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 5
                    },
                    {
                        "question_id": "492973",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Write a class to calculate simple interest by taking all three inputs by user in inputdata function and also Call calculatesimple interest function from inputdata function<\\/p>\\n\",\"options\":[[]],\"marks\":10,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 6
                    },
                    {
                        "question_id": "492969",
                        "question_list_id": "26620",
                        "question_JSON": "[\"\\n\"]",
                        "input_JSON": "[{\"input_type\":5,\"question_string\":\"<p>Write a python code to combine two dictionaries having key of the first dictionary and value of the second dictionary such as the following output :\\r<\\/p><p>The original dictionary 1 is : {'Mercury': 100, 'Venus': 200, 'Earth': 300}\\r<\\/p><p>The original dictionary 2 is : {'Star': 500, 'Moon': 600, 'Sun': 700}\\r<\\/p><p>Final Mapped dictionary : {'Mercury': 500, 'Venus': 600, 'Earth': 700}\\r<\\/p><p>&nbsp;<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p>\\r<\\/p><p> \\r<\\/p><p>\\r<\\/p>\\n\",\"options\":[[]],\"marks\":5,\"neg_mark\":0,\"hint\":\"\",\"opposite_marking\":0}]",
                        "question_number": "-1",
                        "sound_asset": null,
                        "sound_play_times": -1,
                        "video_asset": null,
                        "text_image_asset": null,
                        "question_index": 7
                    }
                ],
                "max_questions_allowed": 0
            }
        ],
        "test_time": 2700,
        "sound_url": null,
        "sound_play_times": -1,
        "passing_mark": null,
        "user_class_passing_mark": null,
        "user_personal_passing_mark": null,
        "test_type": null,
        "require_capitals": null,
        "perfectionist": null,
        "hardworker": null,
        "speedrun": null,
        "speedrun_time_sec": null,
        "test_tag": null,
        "default_display": null,
        "numbering_scheme": null,
        "force_finish": 1,
        "user_attempts": null,
        "user_highest_mark": null,
        "user_best_time": null,
        "passed_earned": null,
        "perfected_earned": null,
        "speedrun_earned": null,
        "hardworker_earned": null,
        "perfectionist_earned": null,
        "show_calculator": 0
    }
}